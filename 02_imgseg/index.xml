<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>02_imgsegs on SWT EToys Notes</title>
    <link>http://etoys-notes.xyz/02_imgseg/</link>
    <description>Recent content in 02_imgsegs on SWT EToys Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 May 2016 14:23:20 +0200</lastBuildDate>
    <atom:link href="http://etoys-notes.xyz/02_imgseg/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Image Segment</title>
      <link>http://etoys-notes.xyz/02_imgseg/</link>
      <pubDate>Wed, 18 May 2016 14:23:20 +0200</pubDate>
      
      <guid>http://etoys-notes.xyz/02_imgseg/</guid>
      <description>

&lt;h1 id=&#34;image-segment&#34;&gt;Image Segment&lt;/h1&gt;

&lt;p&gt;If no other errors occure during the loading process, attempting to load a Squeak 3 Project in Squeak 5 will result in an error (&amp;rdquo;&lt;code&gt;Error: Segment has not been becommed into the loaded objects&lt;/code&gt;&amp;rdquo;) from &lt;code&gt;ImageSegment&amp;gt;&amp;gt;checkAndReportLoadError&lt;/code&gt;, which is called immediatly after the primitive at &lt;code&gt;ImageSegment&amp;gt;&amp;gt;loadSegmentFrom:outPointers:&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;notices warning&#34; &gt;&lt;p&gt;The documentation of &lt;code&gt;ImageSegment&amp;gt;&amp;gt;loadSegmentFrom:outPointers:&lt;/code&gt; states that &amp;ldquo;[this primitive] will have destroyed the contents of the segment wordArray&amp;rdquo; if it fails.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;As such it will probably be required to save a copy of the segment wordArray prior to executing this primitive. Then, should the primitive fail, an attempt can be made to load the ImageSegement &amp;ldquo;manually&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Object Headers</title>
      <link>http://etoys-notes.xyz/02_imgseg/object-header/</link>
      <pubDate>Mon, 06 Jun 2016 19:18:21 +0200</pubDate>
      
      <guid>http://etoys-notes.xyz/02_imgseg/object-header/</guid>
      <description>&lt;p&gt;The header of a Squeak object contains of up to three words with the size of 4 bytes.
The first is the so called base header and is always present.
The second is the full class pointer of the object, it has an offset of -4 and isn&amp;rsquo;t present all the time.
The third word is also optional, it has an offset of -8 and contains the size in words of an object.&lt;/p&gt;

&lt;p&gt;Besides the main information every part of the header contains 2 bit which say, how big the header is.
( 0: just the base header is present, 1: the base header and the full class pointer are present, 3: The header contains all three words)&lt;/p&gt;

&lt;p&gt;Now we need to know which information are stored in the base header:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bits&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0-2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;storage management information&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3-14&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;object hash&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;15-19&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;compact class index&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;20-23&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;object format&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;24-29&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;size in words&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;30-31&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;header type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The storage management information and the object hash weren&amp;rsquo;t interesting for us.&lt;/p&gt;

&lt;p&gt;The compact class index is an alternative to the full class pointer of the object if the class is one of 32 special classes (&amp;lsquo;Compact Classes&amp;rsquo;).&lt;/p&gt;

&lt;p&gt;The object format gives information about the format of the object. In the table below you can see the meaning of each number:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Number&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no fields&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;fixed pointer fields&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;indexable pointer fields&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;both fixed and indexable pointer fields&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4+5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;not used&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;indexable word fields (no pointer)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;not used&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;8-11&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;indexable byte fields (no pointers): low 2 bits are low 2 bits of size in bytes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;12-15&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;compiled methods: low 2 bits are low 2 bits of size in bytes. The number of literals is specified in method header, followed by the indexable bytes that store byte codes.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;code&gt;size in words&lt;/code&gt; field is used to store the object size unless it exceeds 64 words.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Loading Process</title>
      <link>http://etoys-notes.xyz/02_imgseg/loading-process/</link>
      <pubDate>Sat, 11 Jun 2016 11:23:21 +0200</pubDate>
      
      <guid>http://etoys-notes.xyz/02_imgseg/loading-process/</guid>
      <description>&lt;p&gt;We load segments with the following algorithm:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the entire segment:

&lt;ul&gt;
&lt;li&gt;Load header&lt;/li&gt;
&lt;li&gt;Create placeholder&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For all placeholders:

&lt;ul&gt;
&lt;li&gt;Acquire class oop&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;While not all objects loaded:

&lt;ul&gt;
&lt;li&gt;For all placeholder objects:

&lt;ul&gt;
&lt;li&gt;If class is loaded, load object&lt;/li&gt;
&lt;li&gt;Else do nothing, class will be loaded in a subsequent iteration&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each object is loaded with the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class basicNew&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Write fields via primitives&lt;/li&gt;
&lt;li&gt;&lt;code&gt;self becomeForward: createdObject&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Test Image Segment Creation</title>
      <link>http://etoys-notes.xyz/02_imgseg/test-segment-creation/</link>
      <pubDate>Sat, 11 Jun 2016 14:30:26 +0200</pubDate>
      
      <guid>http://etoys-notes.xyz/02_imgseg/test-segment-creation/</guid>
      <description>&lt;p&gt;To better support automated testing and experimentation, it was necessary to create minimal image segments, containing only specific, known objects.&lt;/p&gt;

&lt;p&gt;Since the creation of minimal test image segments needs to happen in a Squeak 3 VM, which has no support for &lt;code&gt;filetree&lt;/code&gt;, the following method needs to be added manually to some class in the image:&lt;/p&gt;

&lt;div class=&#34;notices note&#34; &gt;&lt;p&gt;This method probably only works for simple objects - classes, methods and out-pointers may or may not be exported correctly.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #202020&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #447fcf&#34;&gt;dumpSimpleImageSegmentTo:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;fileName&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;withRoots:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;rootArray&lt;/span&gt;

&lt;span style=&#34;color: #d0d0d0&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #40ffff&#34;&gt; is fs sr symbolHolder &lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;|&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;symbolHolder&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;Symbol&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;allSymbols&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;ImageSegment&lt;/span&gt; &lt;span style=&#34;color: #24909d&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;copyFromRoots:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;rootArray&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;sizeHint:&lt;/span&gt; &lt;span style=&#34;color: #3677a9&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;areUnique:&lt;/span&gt; &lt;span style=&#34;color: #24909d&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;FileStream&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;fileNamed:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;fileName&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;sr&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;SmartRefStream&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;on:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;fs&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;sr&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;nextPut:&lt;/span&gt; &lt;span style=&#34;color: #40ffff&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;sr&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #40ffff&#34;&gt;symbolHolder&lt;/span&gt;&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then use as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #202020&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;Dummy&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;dumpSimpleImageSegmentTo:&lt;/span&gt; &lt;span style=&#34;color: #ed9d13&#34;&gt;&amp;#39;/tmp/iseg.dump&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #447fcf&#34;&gt;withRoots:&lt;/span&gt; { &lt;span style=&#34;color: #3677a9&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #ed9d13&#34;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #447fcf; text-decoration: underline&#34;&gt;Object&lt;/span&gt; &lt;span style=&#34;color: #24909d&#34;&gt;new&lt;/span&gt; }&lt;span style=&#34;color: #d0d0d0&#34;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>